<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rooomy.cdsoftware.toolplatform.system.mapper.GroupMapper">
	<resultMap id="baseResultMap" type="cn.rooomy.cdsoftware.toolplatform.system.entity.GroupDO">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="scope" jdbcType="VARCHAR" property="scope" />
	</resultMap>
	
	<!-- 所有列 -->
	<sql id="allColumnList">
		id, `name`, description, scope
	</sql>
	
	<!-- 基本列Where条件 -->
	<sql id="baseWhereClause">
        <trim prefix="WHERE" prefixOverrides="AND">
			<if test="name != null and name != ''">
				AND `name`=#{name}
			</if>
			<if test="description != null and description != ''">
				AND description=#{description}
			</if>
			<if test="scope != null and scope != ''">
				AND scope=#{scope}
			</if>
		</trim>
    </sql>
    
    <!-- 选择性更新Set -->
    <sql id="selectiveSetClause">
        <set>
			<if test="name != null and name != ''">
                `name`=#{name}, 
            </if>
			<if test="description != null and description != ''">
                description=#{description},
            </if>
			<if test="scope != null and scope != ''">
                scope=#{scope}
            </if>
		</set>
    </sql>
    
    <!-- 新增 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Object">
        INSERT INTO sys_group (
			<include refid="allColumnList" />
        )
        VALUES (
        	#{id}, #{name}, #{description}, #{scope}
        )
    </insert>
    
    
    <!-- 批量新增 -->
    <insert id="multiInsert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_group (
		<include refid="allColumnList" />
        )
        VALUES
    	<foreach collection="list" item="itm" separator=",">
    		(#{itm.id}, #{itm.name}, #{itm.description}, #{itm.scope})
    	</foreach>
    </insert>
    
    <!-- 删除 -->
    <delete id="delete">
        DELETE FROM sys_group
        WHERE id = #{id}
    </delete>
    
    <!-- 批量删除 -->
    <delete id="multiDelete">
    	DELETE FROM sys_group
        WHERE id IN
        <foreach collection="list" item="itm" open="(" close=")" separator=",">
    		#{itm}
    	</foreach>
    </delete>
    
    <!-- 更新 -->
    <update id="update" parameterType="Object">
        UPDATE sys_group SET
			`name`=#{name}, 
			description=#{description},
			scope = #{scope}
        WHERE id = #{id}
    </update>
    
    <!-- 批量更新 -->
    <update id="multiUpdate">
    	<foreach collection="list" item="itm" separator=";">
    		UPDATE sys_group SET
				`name`=#{itm.name}, 
				description=#{itm.description},
				scope = #{itm.scope}
	        WHERE id = #{itm.id}
    	</foreach>
    </update>
    
    <!-- 选择更新 -->
    <update id="updateSelective">
        UPDATE sys_group
        <include refid="selectiveSetClause" />
        WHERE id = #{id}
    </update>
    
    <!--批量选择更新-->
    <update id="multiUpdateSelective">
    	<foreach collection="list" item="itm" separator=";">
    		UPDATE sys_group
	        <set>
				<if test="itm.name != null and itm.name != ''">
	                `name`=#{itm.name}, 
	            </if>
				<if test="itm.description != null and itm.description != ''">
	                description=#{itm.description},
	            </if>
				<if test="itm.scope != null and itm.scope != ''">
	                scope=#{itm.scope}
	            </if>
			</set>
	        WHERE id = #{itm.id}
    	</foreach>
    </update>
    
    <!-- 根据非主键字段查询条件计数 -->
    <select id="count" parameterType="Object">
    	SELECT COUNT(*) FROM sys_group
    	<include refid="baseWhereClause" />
    </select>
    
    <!-- 根据主键查询 -->
    <select id="select" resultMap="baseResultMap">
        SELECT
        <include refid="allColumnList" />
        FROM sys_group
        WHERE id = #{id}
    </select>
    
    <!-- 根据对象查询列表 -->
    <select id="selectList" parameterType="Object" resultMap="baseResultMap">
    	SELECT
    	<include refid="allColumnList" />
    	FROM sys_group
    	<include refid="baseWhereClause" />
    </select>
    
    <!-- 以上为生成工具生成,支持基础方法,切勿修改 -->
    
    <select id="selectUniqueByName" resultMap="baseResultMap">
    	SELECT
    	<include refid="allColumnList" />
    	FROM sys_group
    	WHERE `name` = #{name}
    </select>
    
    <select id="selectByName" resultMap="baseResultMap">
    	SELECT
    	<include refid="allColumnList" />
    	FROM sys_group
    	<trim prefix="WHERE" prefixOverrides="AND">
    		<if test="scope != null and scope != ''">
    			scope = #{scope}
    		</if>
    		<if test="name != null and name != ''">
    			AND LOWER(`name`) LIKE CONCAT('%', #{name}, '%')
    		</if>
    	</trim>
    </select>
    
    <select id="selectByIds" resultMap="baseResultMap">
    	SELECT
    	<include refid="allColumnList" />
    	FROM sys_group
    	WHERE id IN <foreach collection="ids" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </select>
    
    <resultMap id="dtoResultMap" type="cn.rooomy.cdsoftware.toolplatform.system.model.GroupDTO" extends="baseResultMap">
    	<collection property="roles" ofType="cn.rooomy.cdsoftware.toolplatform.system.entity.RoleDO">
    		<id column="role_id" jdbcType="BIGINT" property="id" />
			<result column="role_code" jdbcType="VARCHAR" property="code" />
			<result column="role_name" jdbcType="VARCHAR" property="name" />
			<result column="role_scope" jdbcType="VARCHAR" property="scope" />
    	</collection>
    </resultMap>
    
    <select id="selectDTOByIds" resultMap="dtoResultMap">
    	SELECT
    		g.id, g.`name`, g.description, g.scope,
    		r.id AS role_id, r.`code` AS role_code, r.`name` AS role_name, r.scope AS role_scope
    	FROM sys_group g
    	LEFT JOIN sys_r_role_group rrg ON rrg.group_id = g.id
    	LEFT JOIN sys_role r ON r.id = rrg.role_id
    	WHERE g.id IN <foreach collection="ids" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </select>
    
    <insert id="relateUsersToGroup">
    	INSERT INTO sys_r_user_group (group_id, user_id)
        VALUES <foreach collection="userIds" item="userId" separator=",">( #{groupId}, #{userId} )</foreach>
    </insert>
    
    <delete id="unrelateUserFromGroup">
    	DELETE FROM sys_r_user_group WHERE group_id = #{groupId} AND user_id = #{userId}
    </delete>
    
    <delete id="unrelateGroupUsers">
    	DELETE FROM sys_r_user_group WHERE group_id = #{groupId}
    </delete>
    
    <delete id="unrelateGroupRoles">
    	DELETE FROM sys_r_role_group WHERE group_id = #{groupId}
    </delete>
    
    <select id="countGroupUsers" resultType="Integer">
 		SELECT COUNT(0) FROM sys_r_user_group WHERE group_id = #{groupId}
    </select>
    
    <select id="countGroupRoles" resultType="Integer">
 		SELECT COUNT(0) FROM sys_r_role_group WHERE group_id = #{groupId}
    </select>
    
</mapper>